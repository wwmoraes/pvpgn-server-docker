name: Build

# yamllint disable-line rule:truthy
on:
  push:
    branches:
    - master
    tags:
    - '*'
    paths:
    - .github/workflows/build.yml
    - Dockerfile
  pull_request:
    branches:
    - master
    paths:
    - .github/workflows/build.yml
    - Dockerfile

env:
  BRANCH: 1.99.7.2.1

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        mode: [plain, mysql, pgsql, sqlite3, odbc]
    steps:
    - name: set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: set up docker buildx
      uses: docker/setup-buildx-action@v1
    - name: cache build
      uses: pat-s/always-upload-cache@v2.1.5
      with:
        path: ${{ runner.temp }}/.buildx-cache
        key: ${{ runner.os }}-build-${{ matrix.mode }}-${{ hashFiles('Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ matrix.mode }}-${{ hashFiles('Dockerfile') }}
          ${{ runner.os }}-build-${{ matrix.mode }}-
    - name: checkout
      uses: actions/checkout@v2
    - name: generate container meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ github.repository_owner }}/pvpgn-server
        flavor: |
          latest=true
          suffix=-${{ matrix.mode }},onlatest=true
        labels: |
           org.opencontainers.image.title="PvPGN-PRO"
           org.opencontainers.image.description="Next generation of PvPGN server"
           org.opencontainers.image.version=${{ env.BRANCH }}
           org.opencontainers.image.documentation=https://pvpgn.pro
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=${{ env.BRANCH }}
        github-token: ${{ github.token }}
    - name: login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: build & push
      uses: docker/build-push-action@v2
      env:
        DOCKER_BUILDKIT: 1
        BUILDKIT_INLINE_CACHE: 1
      with:
        build-args: |
          BRANCH=${{ env.BRANCH }}
          MODE=${{ matrix.mode }}
        push: ${{ github.event_name != 'pull_request' }}
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        labels: ${{ steps.meta.outputs.labels }}
        cache-to: |
          type=local,mode=max,dest=${{ runner.temp }}/.buildx-cache
        cache-from: |
          type=local,src=${{ runner.temp }}/.buildx-cache
          ${{ steps.meta.outputs.tags }}
        tags: ${{ steps.meta.outputs.tags }}
    - name: update DockerHub description
      if: github.event_name != 'pull_request'
      uses: meeDamian/sync-readme@v1.0.6
      with:
        pass: ${{ secrets.DOCKER_PASSWORD }}
        description: true
